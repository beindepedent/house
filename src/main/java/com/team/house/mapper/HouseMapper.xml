<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.house.mapper.HouseMapper">
  <resultMap id="BaseResultMap" type="com.team.house.entity.House">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="TYPE_ID" jdbcType="INTEGER" property="typeId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="PRICE" jdbcType="DECIMAL" property="price" />
    <result column="PUBDATE" jdbcType="DATE" property="pubdate" />
    <result column="FLOORAGE" jdbcType="INTEGER" property="floorage" />
    <result column="CONTACT" jdbcType="VARCHAR" property="contact" />
    <result column="STREET_ID" jdbcType="INTEGER" property="streetId" />
    <result column="ispass" jdbcType="INTEGER" property="ispass" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, TYPE_ID, TITLE, DESCRIPTION, PRICE, PUBDATE, FLOORAGE, CONTACT, STREET_ID, 
    ispass, isdel, path
  </sql>
  <select id="selectByExample" parameterType="com.team.house.entity.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.team.house.entity.House">
    insert into house (ID, USER_ID, TYPE_ID, 
      TITLE, DESCRIPTION, PRICE, 
      PUBDATE, FLOORAGE, CONTACT, 
      STREET_ID, ispass, isdel, 
      path)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{pubdate,jdbcType=DATE}, #{floorage,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, 
      #{streetId,jdbcType=INTEGER}, #{ispass,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.team.house.entity.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="pubdate != null">
        PUBDATE,
      </if>
      <if test="floorage != null">
        FLOORAGE,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="streetId != null">
        STREET_ID,
      </if>
      <if test="ispass != null">
        ispass,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.house.entity.House">
    update house
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        PUBDATE = #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        FLOORAGE = #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        CONTACT = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        STREET_ID = #{streetId,jdbcType=INTEGER},
      </if>
      <if test="ispass != null">
        ispass = #{ispass,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.house.entity.House">
    update house
    set USER_ID = #{userId,jdbcType=INTEGER},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      TITLE = #{title,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      PUBDATE = #{pubdate,jdbcType=DATE},
      FLOORAGE = #{floorage,jdbcType=INTEGER},
      CONTACT = #{contact,jdbcType=VARCHAR},
      STREET_ID = #{streetId,jdbcType=INTEGER},
      ispass = #{ispass,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <!--删除街道下的房屋-->
  <delete id="deleteHouseByStreetId" parameterType="int">
      DELETE FROM house where street_id=#{id}
  </delete>
  <!--批量删除类型-->
  <delete id="deleteMoreHouse">
    <!--使用foreach构建in关键字
      如果传递是数组：collection="array"
      如果传递是list集合 collection="list"
    -->
    delete from house where id in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
  <!--select count(*) from house where type=id-->
  <select id="selectHouseByTypeId" parameterType="java.lang.Integer" resultType="int">
      select count(1) from house where type_id=#{id}
  </select>
  <!--查询用户的所有出租房且未被删除房屋的信息-->
  <select id="getHouseByUser" resultType="House" parameterType="int">
    SELECT h.id,title,d.name AS dname,s.name AS sname,
      t.name AS tname,floorage,contact,price,path,ispass FROM house AS h
		LEFT JOIN TYPE AS t ON h.type_id=t.id
		LEFT JOIN street AS s ON h.street_id=s.id
		LEFT JOIN district AS d ON s.district_id=d.id
		WHERE h.user_id=#{userid} and  h.isdel=0
  </select>
  <!--查询出租房信息-->
  <!--注意这里不能选择所有，选择所有后返回的数据源的属性名与数据库中的列表名是一致的，
      而数据库的列表名与实体类的列表名的对应关系是有一个id为BaseResultMap的resultMap映射封装关系
      所以在使用多表的连接查询的时候，一定要将查到的属性as跟实体类对应的属性名
  -->
 <!-- /*SELECT h.*,d.id AS did FROM house LEFT JOIN street AS s ON h.street_id=s.id
  LEFT JOIN district AS d ON s.district_id=d.id
  where id=#{id}*/-->
  <select id="getHouseById" resultType="House" parameterType="string">
      SELECT
	d.id AS did,
	type_id AS typeId,
	title,
	description,
	price,
	pubdate,
	floorage,
	contact,
	street_id AS streetid,
	path
 FROM house AS h
	LEFT JOIN street AS s ON h.street_id=s.id
	LEFT JOIN district AS d ON s.district_id=d.id
      where h.id=#{id}
  </select>
  <!--通过审核状态查询出租房信息-->
  <select id="getHouseByIsPass" resultType="House" parameterType="int">
    SELECT
	h.id,
	title,
	d.name AS dname,
	s.name AS sname,
	t.name AS tname,
	floorage,
	contact,
	price,
	path
 FROM house AS h
	LEFT JOIN TYPE AS t ON h.type_id=t.id
	LEFT JOIN street AS s ON h.street_id=s.id
	LEFT JOIN district AS d ON s.district_id=d.id
      WHERE ispass=#{ispass} AND isdel=0
  </select>
  <!--查询浏览所有出租房信息-->
  <select id="getBorswerHouse" parameterType="com.team.house.util.HouseCondition" resultType="House">
    SELECT
	h.id,
	title,
	d.name AS dname,
	s.name AS sname,
	t.name AS tname,
	floorage,
	contact,
	price,
	path
 FROM house AS h
	LEFT JOIN TYPE AS t ON h.type_id=t.id
	LEFT JOIN street AS s ON h.street_id=s.id
	LEFT JOIN district AS d ON s.district_id=d.id
      WHERE ispass=1 AND isdel=0
      <!--拼接条件-->
    <if test="title!=null">
      and title like concat('%',#{title},'%')
    </if>
    <if test="typeid!=null">
      and h.type_id=#{typeid}
    </if>
    <if test="districtid!=null">
      and s.district_id=#{districtid}
    </if>
    <if test="streetid!=null">
      and h.street_id=#{streetid}
    </if>
    <if test="startPrice!=null">
      and h.price >= #{startPrice}
    </if>
    <if test="endPrice!=null">
      and h.price &lt;= #{endPrice}
    </if>
    <if test="startArea!=null">
      and h.floorage>= #{startArea}
    </if>
    <if test="endArea!=null">
      and h.floorage &lt;= #{endArea}
      <!--<![CDATA[ < ]]> 仅在xml中的用法-->
    </if>
  </select>
</mapper>